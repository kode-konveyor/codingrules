<?xml version="1.0"?>
<ruleset name="Kode Konveyor WAR"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>WAR project PMD rules of Kode Konveyor</description>
	<rule name="GenericsNamesShouldBeDescriptive" language="java"
		message="Generics names should match '[A-Z][a-z0-9]*Type'"
		class="net.sourceforge.pmd.lang.rule.XPathRule">
		<description>
Generics names should match '[A-Z][a-z0-9]*Type'
         </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
//TypeDeclaration/ClassOrInterfaceDeclaration/TypeParameters/TypeParameter[
  not(matches(@Image,'[A-Z][a-z0-9]*Type'))
]
]]></value>
			</property>
		</properties>
		<example>
 <![CDATA[
public interface Matrix<KeyType extends Serializable, ValueType extends Serializable> {
    // This is ok...
}
]]>
        </example>
	</rule>
	<rule name="JUnitTestsShouldIncludeAssert" language="java"
		message="Junit tests should have checks"
		class="net.sourceforge.pmd.lang.rule.XPathRule">
		<!-- externalInfoUrl="TODO" -->
		<description>

    </description>
		<priority>3</priority>
		<properties>
			<property name="xpath">
				<value>
<![CDATA[
//MethodDeclaration[
  ./preceding-sibling::Annotation[.//@Image='Test'] and
  not(
    .//Name[matches(@Image,'assert')] or
    .//Name[matches(@Image,'verify')] or
    .//PrimarySuffix[matches(@Image,'checkText')] or
    .//PrimarySuffix[matches(@Image,'andExpect')]
  )
]
]]>
            </value>
			</property>
		</properties>
		<!--<example><![CDATA[]]></example> -->
	</rule>
<rule name="ClassNamingConventions"
      language="java"
      message="Only standard units should be used. Non-standard classes
should only be used at the interfaces of the application,
and should be marked with @Delegate or @InterfaceClass"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
      Only standard units should be used. Non-standard classes
      should only be used at the interfaces of the application,
      and should be marked with @Delegate or @InterfaceClass
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//TypeDeclaration/ClassOrInterfaceDeclaration[
  not(
   matches(@Image,'[A-Z][a-z0-9]*Interface$') or
   matches(@Image,'[A-Z][a-z0-9]*Service$') or
   matches(@Image,'[A-Z][a-z0-9]*Controller$') or
   matches(@Image,'[A-Z][a-z0-9]*Sanitizer$') or
   matches(@Image,'[A-Z][a-z0-9]*Util$') or
   matches(@Image,'[A-Z][a-z0-9]*Test$') or
   matches(@Image,'[A-Z][a-z0-9]*TestBase$') or
   matches(@Image,'[A-Z][a-z0-9]*TestData$') or
   matches(@Image,'[A-Z][a-z0-9]*TestHelper$') or
   matches(@Image,'[A-Z][a-z0-9]*Entity$') or
   matches(@Image,'[A-Z][a-z0-9]*DTO$') or
   matches(@Image,'[A-Z][a-z0-9]*Repository$') or
   matches(@Image,'[A-Z][a-z0-9]*Constants$') or
   matches(@Image,'[A-Z][a-z0-9]*Exception$') or
   matches(@Image,'[A-Z][a-z0-9]*Factory$') or
   matches(@Image,'[A-Z][a-z0-9]*IT$') or
   matches(@Image,'[A-Z][a-z0-9]*Stubs$')
) and not(
   ../Annotation/MarkerAnnotation/Name/@Image = 'InterfaceClass' or
   ../Annotation/MarkerAnnotation/Name/@Image = 'Delegate'
)
] 

]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="KKMethodNamingConventions"
      language="java"
      message="method names should be smallStartCamelCase"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
The pattern is '^[a-z][a-zA-Z0-9]*$'
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[not(matches(@Image,'TestData$'))]//
MethodDeclarator[not(matches(@Image,'^[a-z][a-zA-Z0-9]*$'))]

]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestDataRulesStaticFinal"
      language="java"
      message="TestData units should contain static final fields only."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
see message
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[matches(@Image,'TestData$')]/(
//FieldDeclaration[
    @Static = false() or @Final = false()
])
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestDataStaticFinalScreamingSnake"
      language="java"
      message="TestData units should contain SCREAMING_SNAKE_CASE or *TestData field names."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
see message
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[matches(@Image,'TestData$')]/(
//FieldDeclaration[
    not(
        matches(VariableDeclarator/VariableDeclaratorId/@Image,'^[A-Z0-9_]*$') or
        matches(VariableDeclarator/VariableDeclaratorId/@Image,'^[a-z0-9_]*TestData$')
    )
])
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestDataRulesGetters"
      language="java"
      message="TestData units should contain public static final getters and lists."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>
see message
   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[matches(@Image,'TestData$')]/(
//MethodDeclaration[
    not(matches(MethodDeclarator/@Image,'^get[a-zA-z]*$') or
    	matches(MethodDeclarator/@Image,'^list[a-zA-z]*$')) or
    @Public = false()
]|
.[..//MarkerAnnotation[Name/@Image='Getter']]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="ShortVariables"
      language="java"
      message="No short variables, except id as field"
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//VariableDeclaratorId[string-length(@Image) < 3 and not(
   (@Image = 'id' and ../../local-name() = 'FieldDeclaration') or
   (@Image = 'ID' and ../../local-name() = 'FieldDeclaration')
)]

]]>
         </value>
      </property>
   </properties>
</rule>

<rule name="TestRulesAnnotations"
      language="java"
      message="A Test class should have the standard annotations."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Test')]/(
    .[not(../Annotation//Name[@Image='TestedService'])]|
    .[not(../Annotation//Name[@Image='TestedBehaviour'])]|
    .[not(../Annotation//Name[@Image='RunWith'])]|
    .[not(../Annotation//Name[@Image='MockitoSettings'])]|
    .[not(../Annotation//Name[@Image='ExtendWith'])]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestRulesTestBase"
      language="java"
      message="A Test class should extend a TestBase."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Test') and not(ends-with(@Image,'SanitizerTest'))]/(
    .[not(ExtendsList)]|
    .[not(ExtendsList/ClassOrInterfaceType[ends-with(@Image,'TestBase')])]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="TestRulesNoStub"
      language="java"
      message="A Test class should have no stubs."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Test')]/(
    //PrimaryPrefix/Name[@Image='doReturn' or @Image='doThrow']
)
]]>
         </value>
      </property>
   </properties>
</rule>

<rule name="UtilRulesStaticMethods"
      language="java"
      message="All methods of a Util must be static."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Util')]/(
    //MethodDeclaration[@Static = false()]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="UtilRulesPublicMethod"
      language="java"
      message="Utils must have at least one public method."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Util') and not(descendant::MethodDeclaration[@Public = true()])]

]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="UtilRulesPrivateField"
      language="java"
      message="Utils should have private fields only."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Util')]/(
    //FieldDeclaration[@Private = false()]
) 
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="UtilRulesNoExtend"
      language="java"
      message="Utils should have no superclass."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Util')]/(
    .[ExtendsList]
) 
]]>
         </value>
      </property>
   </properties>
</rule>

<rule name="ControllerRestControllerAnnotation"
      language="java"
      message="A Controller should have @RestController annotation."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Controller')]/(
.[count(../Annotation/*/Name[@Image = 'RestController']) != 1]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="ControllerCallMethodMappingAnnotation"
      language="java"
      message="A Controller should have a public call method with mapping annotation."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Controller')]/(
.[count(//Annotation[
    ends-with(./*/Name/@Image,'Mapping') and
    following-sibling::MethodDeclaration[@Private=false() and starts-with(MethodDeclarator/@Image,'call')]
  ]) = 0]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="NoPublicButCall"
      language="java"
      message="A Controller or Service should not have other public method than 'call'."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Controller') or ends-with(@Image,'Service')]/(
//MethodDeclaration[@Private=false() and not(starts-with(MethodDeclarator/@Image,'call'))]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="NoStatic"
      language="java"
      message="A Test, Controller or Service should not have static fields."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Controller') or
                              ends-with(@Image,'Test') or
                              ends-with(@Image,'Service')]/(
                                 //FieldDeclaration[@Static=true()]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="ControllerPackagePrivateFields"
      language="java"
      message="A Controller should have package private fields."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Controller')]/(
//FieldDeclaration[@PackagePrivate=false()]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="NoLiterals"
      language="java"
      message="Only the following literals are accepted: 0, 1, true, false and null."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration/(
//MethodDeclaration//Literal[not(
  (
   (@IntLiteral=true() or
     @LongLiteral=true() or
     @FloatLiteral=true() or
     @DoubleLiteral=true()) and
   @ValueAsInt = 0 or @ValueAsInt = 1) or
  BooleanLiteral or
  NullLiteral)][not(ancestor::PrimarySuffix[(preceding-sibling::*)[1][
(
    matches(@Image,'checkText') or
    matches(@Image,'goToPage') or
    matches(@Image,'enter') or
    matches(@Image,'click')
) or
Name[(
    matches(@Image,'checkText') or
    matches(@Image,'goToPage') or
    matches(@Image,'enter') or
    matches(@Image,'click')
)]
]])]
)

]]>
         </value>
      </property>
   </properties>
</rule>

<rule name="ServicePrivateFields"
      language="java"
      message="A Service should have private fields only."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Service')]/(
//FieldDeclaration[@Private=false()]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="ServiceCallMethodRules"
      language="java"
      message="A Service should have a public call method."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Service')]/(
.[count(//MethodDeclaration[@Private=false() and starts-with(MethodDeclarator/@Image,'call')]) = 0]
)
]]>
         </value>
      </property>
   </properties>
</rule>
<rule name="ServiceAnnotation"
      language="java"
      message="A Service should have a @Service annotation."
      class="net.sourceforge.pmd.lang.rule.XPathRule">
   <description>

   </description>
   <priority>3</priority>
   <properties>
      <property name="version" value="2.0"/>
      <property name="xpath">
         <value>
<![CDATA[
//ClassOrInterfaceDeclaration[ends-with(@Image,'Service')]/(
.[count(../Annotation/*/Name/@Image = 'Service') != 1]
)
]]>
         </value>
      </property>
   </properties>
</rule>

</ruleset>
